version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - shared-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    container_name: api
    build: .
    depends_on:
      - database
      - redis
    networks:
      - shared-network
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8000"

  database:
    container_name: database
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123"  
      POSTGRES_DB: "stockbroker"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shared-network
    restart: always

  redis:
    container_name: redis
    image: redis
    networks:
      - shared-network
    volumes:
      - redis-data:/data
    restart: always

volumes:
  redis-data:
  postgres-data:

networks:
  shared-network: